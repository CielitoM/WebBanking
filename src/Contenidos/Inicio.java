package Contenidos;

import Interfaces.Interface_Panel;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;

import clasesSWB.Cuenta;
import clasesSWB.Cliente;
import clasesSWB.PersistenceManager;


/**
 * Panel de inicio que implementa la interfaz Interface_Panel.
 * Permite visualizar información básica al iniciar la aplicación.
 * Extiende desde javax.swing.JPanel.
 * @author MAN-U
 */

public class Inicio extends javax.swing.JPanel implements Interface_Panel {
    private PersistenceManager persistenceManager;
    /**
     * Constructor de la clase Inicio.
     * @param persistenceManager Instancia de la clase PersistenceManager que se utilizará para interactuar con la capa de persistencia.
     */
    public Inicio(PersistenceManager persistenceManager) {
        initComponents();
        changeComponentsProperties();
        this.persistenceManager =persistenceManager;
    }//cierre del constuctor
    
    /**
     * Método que cambia el color y la transparencia del jPanel. 
     */
    @Override
    public final void changeComponentsProperties(){
        this.setBackground(new Color(0, 0, 0, 0));
    }//cierre del metodo

    /**
     * Llama al método desplegarX para desplegar de manera horizontal cada uno de los 
     * componentes contenidos en el jPanel
     */
    @Override
    public void desplegarComponentes(){
        desplegarX(JLabelBienvenido, 290, 1);
        desplegarX(jLabelTituloInicio, 290, 1);
    }//cierre del metodo
    
    /**
     * Llama al método plegarX para plegar de manera horizontal cada uno de los 
     * componentes contenidos en el jPanel
     */
    @Override
    public void plegarComponentes(){
        plegarX(JLabelBienvenido, 290, 1);
        plegarX(jLabelTituloInicio, 290, 1);
    }//cierre del metodo
    
    /**
     * Método que cambia la dimensión de un Component simulando su despliegue en pantalla
     * @param jcomponent      Component a ser desplegado
     * @param totalDesplegarX Parámetro tipo int que determina cuanto se sumará a la anchura
     * actual del JPanel
     * @param time            Milisegundos para simular los intervalos de la animación
     */
    @Override
    public void desplegarX(Component jcomponent, int totalDesplegarX, int time){

        Thread hiloDesplegar = new Thread() { //declara un nuevo hilo
            @Override
            public void run(){
                int anchuraActual = jcomponent.getWidth();
                //ciclo en donde se redimensiona el widget
                for(int desplegarX = anchuraActual; desplegarX <= anchuraActual+totalDesplegarX; desplegarX++){
                    try {
                        Thread.sleep(time);
                        jcomponent.setSize(new Dimension(desplegarX, jcomponent.getHeight())); //redimensiona el JPanel
                    } catch (InterruptedException ex) {
                        System.err.print("No se pudo desplegar el Component");
                    }
                }
            }
        }; hiloDesplegar.start();
    }//cierre del metodo
    
    
    /**
     * Método que cambia la dimensión de un Component simulando su plegado
     * @param jcomponent   Component a ser plegado
     * @param totalPlegarX Parámetro tipo int que determina cuanto se restará a la anchura
     * actual del JPanel
     * @param time   Milisegundos para simular los intervalos de la animación
     */
    @Override
    public void plegarX(Component jcomponent, int totalPlegarX, int time){
        Thread hiloPlegar = new Thread() { //declara un nuevo hilo
            @Override
            public void run(){ 
                int anchuraActual = jcomponent.getWidth();
                //ciclo en donde se disminuye la dimensión del JPanel de uno en uno
                for(int plegarX = anchuraActual; plegarX >= anchuraActual-totalPlegarX; plegarX--){ 
                    //captura la excepción InterruptedException generada por .sleep()
                    try {
                        Thread.sleep(time);
                        jcomponent.setSize(new Dimension(plegarX, jcomponent.getHeight())); //redimensiona el JPanel
                    } catch (InterruptedException ex) {
                        System.err.print("No se pudo plegar el Component");
                    }
                }
            }
        }; hiloPlegar.start(); //comienza el hilo
    }//cierre del metodo
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLabelBienvenido = new javax.swing.JLabel();
        jLabelTituloInicio = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(755, 652));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        JLabelBienvenido.setFont(new java.awt.Font("Segoe UI", 1, 68)); // NOI18N
        JLabelBienvenido.setForeground(new java.awt.Color(255, 255, 255));
        JLabelBienvenido.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLabelBienvenido.setText("Bienvenido {NOMBRE}");
        JLabelBienvenido.setPreferredSize(new java.awt.Dimension(755, 140));

        jLabelTituloInicio.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabelTituloInicio.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTituloInicio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTituloInicio.setText("Inicio");
        jLabelTituloInicio.setMaximumSize(new java.awt.Dimension(1366, 748));
        jLabelTituloInicio.setPreferredSize(new java.awt.Dimension(755, 32));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTituloInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
                    .addComponent(JLabelBienvenido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelTituloInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JLabelBienvenido, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(466, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentResized


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabelBienvenido;
    private javax.swing.JLabel jLabelTituloInicio;
    // End of variables declaration//GEN-END:variables
    
    
     /**
     * Muestra la información del cliente en la interfaz de inicio.
     * @param cuenta Objeto de la clase Cuenta que contiene la información de la cuenta del cliente.
     * @param cliente Objeto de la clase Cliente que contiene la información personal del cliente.
     */
    public void mostrarInformacionCliente(Cuenta cuenta, Cliente cliente){
        // Mostrar la informacion en el jPanel Inicio
        String[] partesNombre = cliente.getNombre().split(" ");
        JLabelBienvenido.setText("Bienvenido " + partesNombre[0]);
    }//cierre del metodo
}//cierre de la clase